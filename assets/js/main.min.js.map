{"version":3,"sources":["../../../assets/js/analytics.js","../../../assets/js/shareIntent.js","../../../assets/js/main.js"],"names":["events","analytics","Clicked bio profile link","Clicked footer link","Clicked share button","event","description","label","window","ga","hasOwnProperty","hitType","eventCategory","eventAction","eventLabel","bindSharePopup","config","handleIntent","e","arguments","length","undefined","target","srcElement","nodeName","toLowerCase","parentNode","href","m","match","intentRegex","intentName","left","Math","round","winWidth","width","_top","winHeight","height","options","windowOptions","open","returnValue","preventDefault","document","addEventListener","configs","facebook","google","twitter","screen","clickedBioProfileLink","clickedFooterLink","matches","text","body"],"mappings":"wnFAaMA,GAWFC,uCAXED,GACJE,2BAA4B,cAC5BC,sBAAuB,gBACvBC,uBAAwB,sBAQtBH,KAUJA,EAAUI,MAAQ,SAACC,EAAaC,GAC1BC,OAAOC,IAAMT,EAAOU,eAAeJ,IACrCE,OAAOC,GAAG,QACRE,QAAgB,QAChBC,cAAgBZ,EAAOM,GACvBO,YAAgBP,EAChBQ,WAAgBP,iBAQPN,oDCWR,SAASc,GAAeC,GAM7B,GAAIC,GAAe,WAGjB,OAHkBC,GAACC,UAAAC,QAAA,GAAAC,SAAAF,UAAA,GAAGX,OAAOH,MAAKc,UAAA,GAC9BG,EAASJ,EAAEI,QAAUJ,EAAEK,WAEpBD,GAA4C,MAAlCA,EAAOE,SAASC,eAC/BH,EAASA,EAAOI,UAGlB,IAAIJ,GAA4C,MAAlCA,EAAOE,SAASC,eAAyBH,EAAOK,KAAM,CAClE,GAAIC,GAAIN,EAAOK,KAAKE,MAAMb,EAAOc,YACjC,IAAIF,EAAG,CAEL3B,EAAUI,MAAM,uBAAwBW,EAAOe,WAE/C,IAAIC,GAAOC,KAAKC,MAAMC,EAAY,EAAMnB,EAAOoB,MAAQ,GACnDC,EAAM,CAENC,GAAYtB,EAAOuB,SACrBF,EAAMJ,KAAKC,MAAMI,EAAa,EAAMtB,EAAOuB,OAAS,GAGtD,IAAIC,GAAaC,EAAa,UAAUzB,EAAOoB,MAAK,WAAWpB,EAAOuB,OAAM,SAASP,EAAI,QAAQK,CACjG7B,QAAOkC,KAAKpB,EAAOK,KAAM,SAAUa,GACnCtB,EAAEyB,aAAc,EAChBzB,EAAE0B,gBAAkB1B,EAAE0B,mBAK5BC,UAASC,iBAAiB,QAAS7B,GAAc,SA9E7CwB,EAeOM,EAqBPT,EACAH,sFArCAM,EAAgB,uDAeTM,GACXC,UACEjB,WAAY,WACZD,YAAa,sCACbM,MAAO,IACPG,OAAQ,KAEVU,QACElB,WAAY,UACZD,YAAa,kCACbM,MAAO,IACPG,OAAQ,KAEVW,SACEnB,WAAY,UACZD,YAAa,8BACbM,MAAO,IACPG,OAAQ,qBAIND,EAAY9B,OAAO2C,OAAOZ,OAC1BJ,EAAW3B,OAAO2C,OAAOf,sECjCzBgB,EAcAC,2DAzBGN,YAAShC,oCAElBA,EAAegC,EAAQC,UACvBjC,EAAegC,EAAQE,QACvBlC,EAAegC,EAAQG,SAOjBE,EAAwB,SAAClC,GACxBA,EAAEI,OAAOgC,QAAQ,kBAItBrD,EAAUI,MAAM,2BAA4Ba,EAAEI,OAAOiC,OAEvDV,SAASW,KAAKV,iBAAiB,QAASM,GAOlCC,EAAoB,SAACnC,GACpBA,EAAEI,OAAOgC,QAAQ,oBAItBrD,EAAUI,MAAM,sBAAwBa,EAAEI,OAAOiC,OAEnDV,SAASW,KAAKV,iBAAiB,QAASO","file":"main.min.js","sourcesContent":["/**\n * Analytics tracking\n *\n * @author David O'Trakoun <me@davidosomething.com>\n * @module site/analytics\n */\n\n\n/**\n * Event name (eventAction) to selector context (eventCategory)\n * @constant\n * @type {Object<String.String>}\n */\nconst events = {\n  'Clicked bio profile link': '.bio__links',\n  'Clicked footer link': '.globalFooter',\n  'Clicked share button': '.widget--sharePost',\n};\n\n\n/**\n * @namespace\n * @type {Object}\n */\nvar analytics = {};\n\n\n/**\n * event\n *\n * @param {String} description\n * @param {Object} label\n * @return {this}\n */\nanalytics.event = (description, label) => {\n  if (window.ga && events.hasOwnProperty(description)) {\n    window.ga('send', {\n      hitType:        'event',\n      eventCategory:  events[description],\n      eventAction:    description,\n      eventLabel:     label,\n    });\n  }\n\n  return this;\n};\n\n\nexport default analytics;\n","/**\n * Web intents for sharing. Adapted from twitter's code.\n *\n * @see {@link https://dev.twitter.com/web/intents#follow-intent}\n * @module site/shareIntent\n */\n\n\nimport analytics from './analytics.js';\n\n\n/**\n * @constant\n * @type {String}\n */\nconst windowOptions = 'scrollbars=yes,resizable=yes,toolbar=no,location=yes';\n\n\n/**\n * @typedef {Object} IntentProvider\n * @property {RegExp} intentRegex matches an HREF\n * @property {Number} width of pop-up window\n * @property {Number} height of pop-up window\n */\n\n/**\n * Settings for each share pop-up provider\n * @constant\n * @type {Object.<String, IntentProvider>}\n */\nexport const configs = {\n  facebook: {\n    intentName: 'Facebook',\n    intentRegex: /facebook\\.com\\/dialog\\/share\\?(\\w+)/,\n    width: 600,\n    height: 500,\n  },\n  google: {\n    intentName: 'Google+',\n    intentRegex: /plus\\.google\\.com\\/share\\?(\\w+)/,\n    width: 500,\n    height: 525,\n  },\n  twitter: {\n    intentName: 'Twitter',\n    intentRegex: /twitter\\.com\\/intent\\/(\\w+)/,\n    width: 550,\n    height: 420,\n  },\n};\n\nconst winHeight = window.screen.height;\nconst winWidth = window.screen.width;\n\n/**\n * shareIntent opens a popup window to share a ShareIntent\n *\n * @param {IntentProvider} config\n */\nexport function bindSharePopup(config) {\n  /**\n   * handleIntent\n   *\n   * @param {Event} e\n   */\n  var handleIntent = (e = window.event) => {\n    let target = e.target || e.srcElement;\n\n    while (target && target.nodeName.toLowerCase() !== 'a') {\n      target = target.parentNode;\n    }\n\n    if (target && target.nodeName.toLowerCase() === 'a' && target.href) {\n      let m = target.href.match(config.intentRegex);\n      if (m) {\n\n        analytics.event('Clicked share button', config.intentName);\n\n        let left = Math.round((winWidth / 2) - (config.width / 2));\n        let top = 0;\n\n        if (winHeight > config.height) {\n          top = Math.round((winHeight / 2) - (config.height / 2));\n        }\n\n        let options = `${windowOptions},width=${config.width},height=${config.height},left=${left},top=${top}`;\n        window.open(target.href, 'intent', options);\n        e.returnValue = false;\n        e.preventDefault && e.preventDefault();\n      }\n    }\n  };\n\n  document.addEventListener('click', handleIntent, false);\n}\n\n","/**\n * @author David O'Trakoun <me@davidosomething.com>\n * @module site/global\n * @requires module:site/analytics\n * @requires module:site/shareIntent\n */\n\nimport analytics from './analytics.js';\nimport { configs, bindSharePopup } from './shareIntent.js';\n\nbindSharePopup(configs.facebook);\nbindSharePopup(configs.google);\nbindSharePopup(configs.twitter);\n\n/**\n * clickedBioProfileLink\n *\n * @param {Event} e\n */\nconst clickedBioProfileLink = (e) => {\n  if (!e.target.matches('.bio__links a')) {\n    return;\n  }\n\n  analytics.event('Clicked bio profile link', e.target.text);\n};\ndocument.body.addEventListener('click', clickedBioProfileLink);\n\n/**\n * clickedFooterLink\n *\n * @param {Event} e\n */\nconst clickedFooterLink = (e) => {\n  if (!e.target.matches('.globalFooter a')) {\n    return;\n  }\n\n  analytics.event('Clicked footer link',  e.target.text);\n};\ndocument.body.addEventListener('click', clickedFooterLink);\n\n"]}